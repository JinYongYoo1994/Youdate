{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"About the script YouDate is a dating script powered by PHP framework Yii 2.0 Core features and possibilities: Browse users nearby or find them in your city Encounters User profiles, photos Private photos Public and private groups Custom profile fields editor Custom sex/gender options Photo moderation Connections: likes, mutual likes, guests Messaging, attachments (photos) Gifts (multiple categories support) Premium features like raising up in search or incognito mode, prioritized messages Payment integration (Stripe, PayPal, Fortumo, Robokassa) Administration area Reports system Blocks system News system Responsive retina template Plugins system (with marketplace) Theme customization (create your own theme or extend from existing one) RTL support (main theme) Languages support: English (by default), Arabic, Czech, French, German, Italian, Russian, Spanish Language editor: add your own languages in admin area GDPR-related: profile data export (HTML or JSON); ability to delete data Online documentation Main package (from Codecanyon) comes with these compiled docs. Online version is available here: https://youdate.website/documentation Documentation repository: https://github.com/hauntd/youdate-docs","title":"Overview"},{"location":"index.html#about-the-script","text":"YouDate is a dating script powered by PHP framework Yii 2.0 Core features and possibilities: Browse users nearby or find them in your city Encounters User profiles, photos Private photos Public and private groups Custom profile fields editor Custom sex/gender options Photo moderation Connections: likes, mutual likes, guests Messaging, attachments (photos) Gifts (multiple categories support) Premium features like raising up in search or incognito mode, prioritized messages Payment integration (Stripe, PayPal, Fortumo, Robokassa) Administration area Reports system Blocks system News system Responsive retina template Plugins system (with marketplace) Theme customization (create your own theme or extend from existing one) RTL support (main theme) Languages support: English (by default), Arabic, Czech, French, German, Italian, Russian, Spanish Language editor: add your own languages in admin area GDPR-related: profile data export (HTML or JSON); ability to delete data","title":"About the script"},{"location":"index.html#online-documentation","text":"Main package (from Codecanyon) comes with these compiled docs. Online version is available here: https://youdate.website/documentation Documentation repository: https://github.com/hauntd/youdate-docs","title":"Online documentation"},{"location":"administration-gifts.html","text":"Overview Gifts feature is a way to attract the attention of users. They can be both free and paid, private or public. Admins are able to add more categories, hide ones, add/remove gifts items from categories and set prices. Typical gift is a graphical file (png or svg, 128x128 preferred), which are located in content/gifts/%giftCategory% directory. For example: . \u251c\u2500 content/ \u2502 \u2514\u2500 gifts/ | \u2514\u2500 christmass/ | \u2514\u2500 new-year-tree.png | \u2514\u2500 santa.png | \u2514\u2500 greetings/ | \u2514\u2500 hello.svg | \u2514\u2500 heart.svg Adding more gifts You can add more gift categories/items in two ways: Scan directory Upload your gifts directory with png/svg files to content/gifts directory: Then click Scan button and app will detect all new files and add to your collection: Manual adding Create a new category: Add files and click Upload button:","title":"Gifts"},{"location":"administration-gifts.html#overview","text":"Gifts feature is a way to attract the attention of users. They can be both free and paid, private or public. Admins are able to add more categories, hide ones, add/remove gifts items from categories and set prices. Typical gift is a graphical file (png or svg, 128x128 preferred), which are located in content/gifts/%giftCategory% directory. For example: . \u251c\u2500 content/ \u2502 \u2514\u2500 gifts/ | \u2514\u2500 christmass/ | \u2514\u2500 new-year-tree.png | \u2514\u2500 santa.png | \u2514\u2500 greetings/ | \u2514\u2500 hello.svg | \u2514\u2500 heart.svg","title":"Overview"},{"location":"administration-gifts.html#adding-more-gifts","text":"You can add more gift categories/items in two ways:","title":"Adding more gifts"},{"location":"administration-gifts.html#scan-directory","text":"Upload your gifts directory with png/svg files to content/gifts directory: Then click Scan button and app will detect all new files and add to your collection:","title":"Scan directory"},{"location":"administration-gifts.html#manual-adding","text":"Create a new category: Add files and click Upload button:","title":"Manual adding"},{"location":"administration-overview.html","text":"Access To access the administration area of your website, find a link called \"Administration\" in the header menu or use the administrator's URL that was entered in the installer (default is admin , so it will be like https://youdate.local/admin ). Info To find out which URL is used, check your .env config file and find ADMIN_PREFIX key. Content Dashboard shows most important counters, info, charts, system status. Users management allows you to find users, update their information, block or delete profiles entirely. Also you can add/remove admin rights, add credits to their balance, toggle verification badge. Photos management. Default scope shows unverified photos first. You can turn moderation off in the \"Settings Photos\" . Pages management. Please note that you have to edit these files carefully - PHP code in this files will be executed; broken HTML structure will affect the resulting view. Also, you have an option to reset pages (restore all page files from the current theme). Languages management allows you to add more languages, translate the script and theme files. Reports management allows you to review all the reports and make verdicts (block users or mark report with \"viewed\" flag). Verifications management allows you to review all the verification requests and make verdicts (add verification badge or not). Settings Main settings includes such params like (but not limited to): site name site language meta tags, meta description header html/css/js code (before /head tag) footer html/css/js/analytics code (before /body tag) and so on Photos settings includes photo-related options: min width/height, moderation on/off, max file size. Payment settings includes currency options, Stripe and PayPal integration params (api keys/secrets). Prices settings for premium, boost features and their duration. Cached data allows you to flush app's cached data and compiled assets.","title":"Overview"},{"location":"administration-overview.html#access","text":"To access the administration area of your website, find a link called \"Administration\" in the header menu or use the administrator's URL that was entered in the installer (default is admin , so it will be like https://youdate.local/admin ). Info To find out which URL is used, check your .env config file and find ADMIN_PREFIX key.","title":"Access"},{"location":"administration-overview.html#content","text":"Dashboard shows most important counters, info, charts, system status. Users management allows you to find users, update their information, block or delete profiles entirely. Also you can add/remove admin rights, add credits to their balance, toggle verification badge. Photos management. Default scope shows unverified photos first. You can turn moderation off in the \"Settings Photos\" . Pages management. Please note that you have to edit these files carefully - PHP code in this files will be executed; broken HTML structure will affect the resulting view. Also, you have an option to reset pages (restore all page files from the current theme). Languages management allows you to add more languages, translate the script and theme files. Reports management allows you to review all the reports and make verdicts (block users or mark report with \"viewed\" flag). Verifications management allows you to review all the verification requests and make verdicts (add verification badge or not).","title":"Content"},{"location":"administration-overview.html#settings","text":"Main settings includes such params like (but not limited to): site name site language meta tags, meta description header html/css/js code (before /head tag) footer html/css/js/analytics code (before /body tag) and so on Photos settings includes photo-related options: min width/height, moderation on/off, max file size. Payment settings includes currency options, Stripe and PayPal integration params (api keys/secrets). Prices settings for premium, boost features and their duration. Cached data allows you to flush app's cached data and compiled assets.","title":"Settings"},{"location":"administration-profile-fields.html","text":"Categories To create additional profile fields you need to create a category first. Navigate to Admin Profile fields Field categories and create a category (at least one). Default value for Language category is app , sort order is 100 . Alias name must be contain alphanumeric symbols, for example: aboutMe . Fields Now, when you have a category, you can add custom profile fields. Supported types are: text, textarea, number, select list, checkbox. After creating/editing profile fields it's highly recommended to reset app cache in Admin Settings Cached data .","title":"Profile fields"},{"location":"administration-profile-fields.html#categories","text":"To create additional profile fields you need to create a category first. Navigate to Admin Profile fields Field categories and create a category (at least one). Default value for Language category is app , sort order is 100 . Alias name must be contain alphanumeric symbols, for example: aboutMe .","title":"Categories"},{"location":"administration-profile-fields.html#fields","text":"Now, when you have a category, you can add custom profile fields. Supported types are: text, textarea, number, select list, checkbox. After creating/editing profile fields it's highly recommended to reset app cache in Admin Settings Cached data .","title":"Fields"},{"location":"cron.html","text":"Hourly/Daily Cron and Queue processing YouDate requires three CRON commands: two for common tasks ( hourly, daily ) and one for queue processing. Cron setup on Ubuntu/Debian To setup cron commands on Ubuntu/Debian, read this answer: https://askubuntu.com/a/2369 Cron commands for hourly/daily tasks and queue processing are: Warning These paths are examples, you should specify the correct path to the script 30 * * * * /path/to/youdate/application/yii cron/hourly /dev/null 2 1 0 18 * * * /path/to/youdate/application/yii cron/daily /dev/null 2 1 * * * * * /path/to/youdate/application/yii queue/run --isolate = 0 /dev/null 2 1 Some hosting providers are not allowing to use cron commands properly. Instead of this, they allow running cron commands using wget . For this case, you can use a file named cron.php (see below). Also you should update your .env config file: CRON_SECRET param must be set. Example: CRON_SECRET is set to mysecret , so the cron command will look like this: 30 * * * * /path/to/usr/bin/wget -O /dev/null https://youdate.local/cron.php?action = cron/hourly secret = mysecret 0 18 * * * /path/to/usr/bin/wget -O /dev/null https://youdate.local/cron.php?action = cron/daily secret = mysecret * * * * * /path/to/usr/bin/wget -O /dev/null https://youdate.local/cron.php?action = queue/run secret = mysecret ?php require ( __DIR__ . /application/bootstrap.php ); require ( __DIR__ . /application/vendor/autoload.php ); require ( __DIR__ . /application/environment.php ); require ( __DIR__ . /application/vendor/yiisoft/yii2/Yii.php ); $config = require ( __DIR__ . /application/config/console.php ); $application = new yii\\console\\Application ( $config ); // protect with password if ( env ( CRON_SECRET ) !== false ) { $secret = $_GET [ secret ] ?? null ; if ( $secret !== env ( CRON_SECRET )) { die ( Access denied ); } } else { die ( CRON_SECRET key required (.env file). See https://youdate.hauntd.me/documentation/cron.html for more details ); } $action = isset ( $_GET [ action ]) ? $_GET [ action ] : null ; $availableCommands = [ cron/hourly , cron/daily , queue/run ]; // when pcntl_signal function is not allowed Yii :: $container - set ( \\yii\\queue\\db\\Command :: class , [ isolate = false ]); if ( in_array ( $action , $availableCommands )) { $application - runAction ( $action ); } else { die ( $action not supported ); } Then you need to execute this script periodically. For example, you can use EasyCron for this. Detailed documentation located here: https://www.easycron.com/cron-job-tutorials/how-to-set-up-cron-job-for-youdate-dating-script Better queue processing ( recommended ) It's better to process queue with Supervisor or Systemd. For more details visit official yii2-queue module docs . Example config for Supervisor ( /etc/supervisor/conf.d/youdate.conf ): [program:youdate-worker] process_name = %(program_name)s_%(process_num)02d command = /usr/bin/php /home/youdate/public_html/application/yii queue/listen --verbose=1 --color=0 autostart = true autorestart = true user = youdate numprocs = 2 redirect_stderr = true stdout_logfile = /home/youdate/public_html/application/runtime/queue-worker.log","title":"4. Cron setup"},{"location":"cron.html#hourlydaily-cron-and-queue-processing","text":"YouDate requires three CRON commands: two for common tasks ( hourly, daily ) and one for queue processing. Cron setup on Ubuntu/Debian To setup cron commands on Ubuntu/Debian, read this answer: https://askubuntu.com/a/2369 Cron commands for hourly/daily tasks and queue processing are: Warning These paths are examples, you should specify the correct path to the script 30 * * * * /path/to/youdate/application/yii cron/hourly /dev/null 2 1 0 18 * * * /path/to/youdate/application/yii cron/daily /dev/null 2 1 * * * * * /path/to/youdate/application/yii queue/run --isolate = 0 /dev/null 2 1 Some hosting providers are not allowing to use cron commands properly. Instead of this, they allow running cron commands using wget . For this case, you can use a file named cron.php (see below). Also you should update your .env config file: CRON_SECRET param must be set. Example: CRON_SECRET is set to mysecret , so the cron command will look like this: 30 * * * * /path/to/usr/bin/wget -O /dev/null https://youdate.local/cron.php?action = cron/hourly secret = mysecret 0 18 * * * /path/to/usr/bin/wget -O /dev/null https://youdate.local/cron.php?action = cron/daily secret = mysecret * * * * * /path/to/usr/bin/wget -O /dev/null https://youdate.local/cron.php?action = queue/run secret = mysecret ?php require ( __DIR__ . /application/bootstrap.php ); require ( __DIR__ . /application/vendor/autoload.php ); require ( __DIR__ . /application/environment.php ); require ( __DIR__ . /application/vendor/yiisoft/yii2/Yii.php ); $config = require ( __DIR__ . /application/config/console.php ); $application = new yii\\console\\Application ( $config ); // protect with password if ( env ( CRON_SECRET ) !== false ) { $secret = $_GET [ secret ] ?? null ; if ( $secret !== env ( CRON_SECRET )) { die ( Access denied ); } } else { die ( CRON_SECRET key required (.env file). See https://youdate.hauntd.me/documentation/cron.html for more details ); } $action = isset ( $_GET [ action ]) ? $_GET [ action ] : null ; $availableCommands = [ cron/hourly , cron/daily , queue/run ]; // when pcntl_signal function is not allowed Yii :: $container - set ( \\yii\\queue\\db\\Command :: class , [ isolate = false ]); if ( in_array ( $action , $availableCommands )) { $application - runAction ( $action ); } else { die ( $action not supported ); } Then you need to execute this script periodically. For example, you can use EasyCron for this. Detailed documentation located here: https://www.easycron.com/cron-job-tutorials/how-to-set-up-cron-job-for-youdate-dating-script","title":"Hourly/Daily Cron and Queue processing"},{"location":"cron.html#better-queue-processing-recommended","text":"It's better to process queue with Supervisor or Systemd. For more details visit official yii2-queue module docs . Example config for Supervisor ( /etc/supervisor/conf.d/youdate.conf ): [program:youdate-worker] process_name = %(program_name)s_%(process_num)02d command = /usr/bin/php /home/youdate/public_html/application/yii queue/listen --verbose=1 --color=0 autostart = true autorestart = true user = youdate numprocs = 2 redirect_stderr = true stdout_logfile = /home/youdate/public_html/application/runtime/queue-worker.log","title":"Better queue processing (recommended)"},{"location":"custom-access.html","text":"In this example profile pages are visible only for logged in users. See https://www.yiiframework.com/doc/guide/2.0/en/concept-events for more info about Yii2 events. ?php namespace mydate\\components ; use app\\base\\Controller ; use app\\controllers\\ProfileController ; use Yii ; use yii\\base\\BootstrapInterface ; use yii\\base\\Event ; use yii\\filters\\AccessControl ; class ThemeBootstrap extends \\youdate\\components\\ThemeBootstrap implements BootstrapInterface { /** * @param \\yii\\base\\Application $app */ public function bootstrap ( $app ) { parent :: bootstrap ( $app ); // your customization code goes here // ... $this - initEvents (); } public function initEvents () { /* * Do not show profiles if user is not logged in */ Event :: on ( ProfileController :: class , ProfileController :: EVENT_BEFORE_INIT , function ( Event $event ) { if ( Yii :: $app - user - isGuest ) { /** @var Controller $controller */ $controller = $event - sender ; $controller - attachBehavior ( access , [ class = AccessControl :: class , rules = [ [ allow = false ], ], ]); } }); } }","title":"Access"},{"location":"custom-data.html","text":"Countries list modification. See https://www.yiiframework.com/doc/guide/2.0/en/concept-events for more info about Yii2 events. ?php namespace mydate\\components ; use app\\helpers\\Geographer ; use Yii ; use yii\\base\\BootstrapInterface ; use yii\\base\\Event ; class ThemeBootstrap extends \\youdate\\components\\ThemeBootstrap implements BootstrapInterface { /** * @param \\yii\\base\\Application $app */ public function bootstrap ( $app ) { parent :: bootstrap ( $app ); // your customization code goes here // ... $this - initEvents (); } public function initEvents () { Event :: on ( Geographer :: class , Geographer :: EVENT_GET_COUNTRIES , function ( \\app\\base\\Event $event ) { /** * Remove countries from list */ unset ( $event - extraData [ US ]); unset ( $event - extraData [ CA ]); // or /** * Set only two countries */ $event - extraData = [ CA = Yii :: t ( app , Canada ), US = Yii :: t ( app , United States ), ]; }); } } Avatar fallback Gravatar is used by default as an avatar fallback. Since v1.5 you can override this in your theme: ?php namespace mydate\\components ; use app\\base\\Event ; use app\\events\\ProfileEvent ; use app\\helpers\\Url ; use app\\models\\Profile ; use yii\\base\\BootstrapInterface ; class ThemeBootstrap extends \\youdate\\components\\ThemeBootstrap implements BootstrapInterface { /** * @param \\yii\\base\\Application $app */ public function bootstrap ( $app ) { parent :: bootstrap ( $app ); // your customization code goes here // ... $this - initEvents (); } public function initEvents () { // Change avatar fallback from Gravatar to custom png: Event :: on ( Profile :: class , Profile :: EVENT_AVATAR_FALLBACK , function ( ProfileEvent $event ) { $avatar = null ; switch ( $event - getProfile () - sex ) { case Profile :: SEX_NOT_SET : $avatar = @extendedThemeUrl/static/images/sex-neutral.png ; break ; case Profile :: SEX_MALE : $avatar = @extendedThemeUrl/static/images/sex-male.png ; break ; case Profile :: SEX_FEMALE : $avatar = @extendedThemeUrl/static/images/sex-female.png ; // or $avatar = @content/avatar.png ; // or $avatar = https://example.com/some-avatar.png ; break ; } $event - getProfile () - fallbackAvatar = Url :: to ( $avatar ); }); } }","title":"Data"},{"location":"custom-data.html#countries-list-modification","text":"See https://www.yiiframework.com/doc/guide/2.0/en/concept-events for more info about Yii2 events. ?php namespace mydate\\components ; use app\\helpers\\Geographer ; use Yii ; use yii\\base\\BootstrapInterface ; use yii\\base\\Event ; class ThemeBootstrap extends \\youdate\\components\\ThemeBootstrap implements BootstrapInterface { /** * @param \\yii\\base\\Application $app */ public function bootstrap ( $app ) { parent :: bootstrap ( $app ); // your customization code goes here // ... $this - initEvents (); } public function initEvents () { Event :: on ( Geographer :: class , Geographer :: EVENT_GET_COUNTRIES , function ( \\app\\base\\Event $event ) { /** * Remove countries from list */ unset ( $event - extraData [ US ]); unset ( $event - extraData [ CA ]); // or /** * Set only two countries */ $event - extraData = [ CA = Yii :: t ( app , Canada ), US = Yii :: t ( app , United States ), ]; }); } }","title":"Countries list modification."},{"location":"custom-data.html#avatar-fallback","text":"Gravatar is used by default as an avatar fallback. Since v1.5 you can override this in your theme: ?php namespace mydate\\components ; use app\\base\\Event ; use app\\events\\ProfileEvent ; use app\\helpers\\Url ; use app\\models\\Profile ; use yii\\base\\BootstrapInterface ; class ThemeBootstrap extends \\youdate\\components\\ThemeBootstrap implements BootstrapInterface { /** * @param \\yii\\base\\Application $app */ public function bootstrap ( $app ) { parent :: bootstrap ( $app ); // your customization code goes here // ... $this - initEvents (); } public function initEvents () { // Change avatar fallback from Gravatar to custom png: Event :: on ( Profile :: class , Profile :: EVENT_AVATAR_FALLBACK , function ( ProfileEvent $event ) { $avatar = null ; switch ( $event - getProfile () - sex ) { case Profile :: SEX_NOT_SET : $avatar = @extendedThemeUrl/static/images/sex-neutral.png ; break ; case Profile :: SEX_MALE : $avatar = @extendedThemeUrl/static/images/sex-male.png ; break ; case Profile :: SEX_FEMALE : $avatar = @extendedThemeUrl/static/images/sex-female.png ; // or $avatar = @content/avatar.png ; // or $avatar = https://example.com/some-avatar.png ; break ; } $event - getProfile () - fallbackAvatar = Url :: to ( $avatar ); }); } }","title":"Avatar fallback"},{"location":"custom-themes.html","text":"YouDate supports two types of themes: full themes, that include: css, js, images, views (templates) and so on. extended themes, that have been inherited from full themes. Warning For proper upgrade you should not edit/delete any files in application and content/themes/youdate directories (your changes will be overwritten by new files). Info YouDate script comes with custom theme which is an extended theme (from youdate ; demo). Starter theme YouDate comes with extended theme called mydate (since v1.4). It's a starting point for theme customization. Files and directories structure is: . \u251c\u2500 content/ # All your content \u2502 \u2514\u2500 themes/ # Themes | \u2514\u2500 youdate/ # Default theme | \u2514\u2500 custom/ # Customized theme (example) | \u2514\u2500 mydate/ # Your theme directory (you should edit this one) | \u2514\u2500 components/ # Theme components | \u2514\u2500 ThemeBootstrap.php # Theme bootstrap class | \u2514\u2500 ThemeSettings.php # Theme settings class | \u2514\u2500 views/ # Views (templates) | \u2514\u2500 theme.json # Theme info | \u2514\u2500 screenshot.png # Theme scresnshot (not required) theme.json contents: { title : MyDate , author : Alexander Kononenko , website : https://youdate.hauntd.me/ , version : 1.0 , namespace : mydate , extends : youdate } ThemeBootstrap.php contents: ?php namespace mydate\\components ; use yii\\base\\BootstrapInterface ; /** * @author Alexander Kononenko contact@hauntd.me * @package mydate\\components */ class ThemeBootstrap extends \\youdate\\components\\ThemeBootstrap implements BootstrapInterface { /** * @param \\yii\\base\\Application $app */ public function bootstrap ( $app ) { parent :: bootstrap ( $app ); // your customization code goes here // ... } } ThemeSettings.php contents: ?php namespace mydate\\components ; use Yii ; /** * @author Alexander Kononenko contact@hauntd.me * @package mydate\\components */ class ThemeSettings extends \\youdate\\components\\ThemeSettings { /** * @return array */ public function getSettings () { $settings = [ // your custom settings // see `content/themes/youdate/components/ThemeSettings.php // ... ]; return array_merge ( $settings , parent :: getSettings ()); } } After creating these files and directories you'll be able to switch to your theme. Note, that all theme settings ( Admin Themes Theme settings ) will be empty, because your new theme settings and youdate theme settings are stored separately. Customizing views (templates) To customize particular views: find them in your parent theme ( content/themes/youdate/views ) copy into your new theme ( content/themes/mydate/views ) Example : you want to customize footer, copy content/themes/youdate/views/partials/footer.php to content/themes/mydate/views/partials/footer.php , then edit copied file.","title":"Themes"},{"location":"custom-themes.html#starter-theme","text":"YouDate comes with extended theme called mydate (since v1.4). It's a starting point for theme customization. Files and directories structure is: . \u251c\u2500 content/ # All your content \u2502 \u2514\u2500 themes/ # Themes | \u2514\u2500 youdate/ # Default theme | \u2514\u2500 custom/ # Customized theme (example) | \u2514\u2500 mydate/ # Your theme directory (you should edit this one) | \u2514\u2500 components/ # Theme components | \u2514\u2500 ThemeBootstrap.php # Theme bootstrap class | \u2514\u2500 ThemeSettings.php # Theme settings class | \u2514\u2500 views/ # Views (templates) | \u2514\u2500 theme.json # Theme info | \u2514\u2500 screenshot.png # Theme scresnshot (not required) theme.json contents: { title : MyDate , author : Alexander Kononenko , website : https://youdate.hauntd.me/ , version : 1.0 , namespace : mydate , extends : youdate } ThemeBootstrap.php contents: ?php namespace mydate\\components ; use yii\\base\\BootstrapInterface ; /** * @author Alexander Kononenko contact@hauntd.me * @package mydate\\components */ class ThemeBootstrap extends \\youdate\\components\\ThemeBootstrap implements BootstrapInterface { /** * @param \\yii\\base\\Application $app */ public function bootstrap ( $app ) { parent :: bootstrap ( $app ); // your customization code goes here // ... } } ThemeSettings.php contents: ?php namespace mydate\\components ; use Yii ; /** * @author Alexander Kononenko contact@hauntd.me * @package mydate\\components */ class ThemeSettings extends \\youdate\\components\\ThemeSettings { /** * @return array */ public function getSettings () { $settings = [ // your custom settings // see `content/themes/youdate/components/ThemeSettings.php // ... ]; return array_merge ( $settings , parent :: getSettings ()); } } After creating these files and directories you'll be able to switch to your theme. Note, that all theme settings ( Admin Themes Theme settings ) will be empty, because your new theme settings and youdate theme settings are stored separately.","title":"Starter theme"},{"location":"custom-themes.html#customizing-views-templates","text":"To customize particular views: find them in your parent theme ( content/themes/youdate/views ) copy into your new theme ( content/themes/mydate/views ) Example : you want to customize footer, copy content/themes/youdate/views/partials/footer.php to content/themes/mydate/views/partials/footer.php , then edit copied file.","title":"Customizing views (templates)"},{"location":"files.html","text":"Files structure Script source files are in Source/youdate.zip file. The structure of the project is: . \u251c\u2500 application/ # Script core files \u251c\u2500 content/ # All your content \u2502 \u251c\u2500 assets/ # Compiled and cached assets (css/js) \u2502 \u251c\u2500 cache/ # Cached photos and thumbnails \u2502 \u251c\u2500 gifts/ # Gifts \u2502 \u251c\u2500 images/ # Images \u2502 \u251c\u2500 pages/ # Site pages \u2502 \u251c\u2500 params/ # Site params and configs \u2502 \u251c\u2500 photos/ # User photos \u2502 \u251c\u2500 plugins/ # Plugins \u2502 \u2514\u2500 themes/ # Themes | \u2514\u2500 youdate/ # Default theme | \u2514\u2500 custom/ # Customized theme (example) \u251c\u2500 .env # Script system settings \u251c\u2500 .htaccess # Apache settings (rewrite) \u2514\u2500 index.php # Entry script Warning For proper upgrade you should not edit/delete any files in application and content/themes/youdate directories (your changes will be overwritten by new files). To customize theme theme - check customization section. Upload Upload all the files (including hidden files like .env or .htaccess ) from the Source/youdate.zip archive to the root directory of your website location (often called as public_html ).","title":"2. Files upload"},{"location":"files.html#files-structure","text":"Script source files are in Source/youdate.zip file. The structure of the project is: . \u251c\u2500 application/ # Script core files \u251c\u2500 content/ # All your content \u2502 \u251c\u2500 assets/ # Compiled and cached assets (css/js) \u2502 \u251c\u2500 cache/ # Cached photos and thumbnails \u2502 \u251c\u2500 gifts/ # Gifts \u2502 \u251c\u2500 images/ # Images \u2502 \u251c\u2500 pages/ # Site pages \u2502 \u251c\u2500 params/ # Site params and configs \u2502 \u251c\u2500 photos/ # User photos \u2502 \u251c\u2500 plugins/ # Plugins \u2502 \u2514\u2500 themes/ # Themes | \u2514\u2500 youdate/ # Default theme | \u2514\u2500 custom/ # Customized theme (example) \u251c\u2500 .env # Script system settings \u251c\u2500 .htaccess # Apache settings (rewrite) \u2514\u2500 index.php # Entry script Warning For proper upgrade you should not edit/delete any files in application and content/themes/youdate directories (your changes will be overwritten by new files). To customize theme theme - check customization section.","title":"Files structure"},{"location":"files.html#upload","text":"Upload all the files (including hidden files like .env or .htaccess ) from the Source/youdate.zip archive to the root directory of your website location (often called as public_html ).","title":"Upload"},{"location":"https.html","text":"By default, the script will work without secure connection (https), except Facebook/Twitter login features. Yet it's highly recommended to turn on redirection (http to https). .htaccess example: IfModule mod_rewrite.c IfModule mod_negotiation.c Options -MultiViews /IfModule RewriteEngine on RewriteCond %{HTTPS} !=on RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301] RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule . index.php /IfModule FilesMatch \\.(gitignore|htaccess|env|env-example)$ Order Allow,Deny Deny from all /FilesMatch IfModule mod_expires.c Header set cache-control: public ExpiresActive on ExpiresByType font/ttf access plus 1 month ExpiresByType font/woff access plus 1 month ExpiresByType image/svg+xml access plus 1 month /IfModule IfModule mod_deflate.c FilesMatch \\.(ttf|otf|eot|svg)$ SetOutputFilter DEFLATE /FilesMatch /IfModule Options All -Indexes","title":"5. HTTPS"},{"location":"installation.html","text":"Installation You can install YouDate script in two ways: by using web-installer or manually. Web-Installer (recommended) Requirements check After uploading files to your web-server/hosting, open your website in the browser. Website URL In this and the following examples it is https://youdate.local . You will see the initial state of the installation - requirements check page. Make sure that everything is ok (all checks pass) and click the \"Continue\" button. Database The next step is to configure the database. You must create a database for your script manually (the installer will not create it for you). Then fill out the form and click the \"Continue\" button. This action will check the database credentials and import the SQL dump (structure + minimum data). Configuration The next step is to create a config file. This action will verify configuration values, create admin user account and write core config params to the file .env file. Notes Admin URL - administration area URL. If set to \"admin\" , then your administration URL will be like: https://youdate.local/admin . Please note that dashboard prefix is reserved and can't be used. Mailer transport - method to deliver mails. SMTP is recommended (see screenshot). In case when SMTP or Sendmail are failing to deliver e-mails, try PHP Mail transport . Facebook App ID and Secret - required for Facebook Login. Visit developers.facebook.com , follow the manuals, create an app and get the credentials. URI for OAuth redirection should be like this: https://youdate.local/auth/facebook Twitter Consumer Key and Secret - required for Twitter Login. Visit developer.twitter.com , follow the manuals, create an app and get the credentials. URI for OAuth redirection should be like this: https://youdate.local/auth/twitter Fill the form, click Finish button. Script is almost ready to use. Next step is to configure cron commands. Manual installation Create a database for YouDate script Import one by one these SQL files: Files/youdate-manual-installation.sql Files/countries.sql Files/geodata.sql Open your script directory, find config template .env-example and rename it to .env Edit .env file: set database credentials, define mailer configuration, social auth credentials etc. Make sure that these script directories are writable: application/runtime content/params content/images content/photos content/cache","title":"3. Installation"},{"location":"installation.html#installation","text":"You can install YouDate script in two ways: by using web-installer or manually.","title":"Installation"},{"location":"installation.html#web-installer-recommended","text":"","title":"Web-Installer (recommended)"},{"location":"installation.html#requirements-check","text":"After uploading files to your web-server/hosting, open your website in the browser. Website URL In this and the following examples it is https://youdate.local . You will see the initial state of the installation - requirements check page. Make sure that everything is ok (all checks pass) and click the \"Continue\" button.","title":"Requirements check"},{"location":"installation.html#database","text":"The next step is to configure the database. You must create a database for your script manually (the installer will not create it for you). Then fill out the form and click the \"Continue\" button. This action will check the database credentials and import the SQL dump (structure + minimum data).","title":"Database"},{"location":"installation.html#configuration","text":"The next step is to create a config file. This action will verify configuration values, create admin user account and write core config params to the file .env file. Notes Admin URL - administration area URL. If set to \"admin\" , then your administration URL will be like: https://youdate.local/admin . Please note that dashboard prefix is reserved and can't be used. Mailer transport - method to deliver mails. SMTP is recommended (see screenshot). In case when SMTP or Sendmail are failing to deliver e-mails, try PHP Mail transport . Facebook App ID and Secret - required for Facebook Login. Visit developers.facebook.com , follow the manuals, create an app and get the credentials. URI for OAuth redirection should be like this: https://youdate.local/auth/facebook Twitter Consumer Key and Secret - required for Twitter Login. Visit developer.twitter.com , follow the manuals, create an app and get the credentials. URI for OAuth redirection should be like this: https://youdate.local/auth/twitter Fill the form, click Finish button. Script is almost ready to use. Next step is to configure cron commands.","title":"Configuration"},{"location":"installation.html#manual-installation","text":"Create a database for YouDate script Import one by one these SQL files: Files/youdate-manual-installation.sql Files/countries.sql Files/geodata.sql Open your script directory, find config template .env-example and rename it to .env Edit .env file: set database credentials, define mailer configuration, social auth credentials etc. Make sure that these script directories are writable: application/runtime content/params content/images content/photos content/cache","title":"Manual installation"},{"location":"payment-fortumo.html","text":"Sign up Create account if you don't have any: https://dashboard.fortumo.com/register Fortumo Web SDK Service You need to setup a Web SDK service. Navigate to your services dashboard , click \"Create new service\" button: Select Web SDK service: Select countries you want to work with: Setup your business relations (according to your requirements): Next, check \"Virtual credits\" option (and set name = \"credits\"): Set pricing. Note , that Fortumo has its own pricing, it's not related to YouDate pricing. Click \"Next\" button. Fill the name fields and URLS: Important Payment URL must end with /balance/fortumo . For example: https://youdate.local/balance/fortumo Redirect URL must end with /balance/fortumo-succcess . For example: https://youdate.local/balance/fortumo-success After service creation, navigate to General tab and copy \"Service ID\" and \"Secret\" params: Notes You don't need generated HTML code snippet (button) Service credentials In YouDate admin area ( Admin Settings Payment settings ) you only need to set service ID and secret params: By default, Fortumo will work in test mode. Try to create test payments, and if everything is ok - go live (Fortumo Dashboard). Additional info Links Account creation: https://merchants.fortumo.com/getting-started/creating-an-account/ Web SDK service creation: https://merchants.fortumo.com/integration-and-testing/web/creating-web-sdk-service/","title":"Fortumo.com"},{"location":"payment-fortumo.html#sign-up","text":"Create account if you don't have any: https://dashboard.fortumo.com/register","title":"Sign up"},{"location":"payment-fortumo.html#fortumo-web-sdk-service","text":"You need to setup a Web SDK service. Navigate to your services dashboard , click \"Create new service\" button: Select Web SDK service: Select countries you want to work with: Setup your business relations (according to your requirements): Next, check \"Virtual credits\" option (and set name = \"credits\"): Set pricing. Note , that Fortumo has its own pricing, it's not related to YouDate pricing. Click \"Next\" button. Fill the name fields and URLS: Important Payment URL must end with /balance/fortumo . For example: https://youdate.local/balance/fortumo Redirect URL must end with /balance/fortumo-succcess . For example: https://youdate.local/balance/fortumo-success After service creation, navigate to General tab and copy \"Service ID\" and \"Secret\" params: Notes You don't need generated HTML code snippet (button)","title":"Fortumo Web SDK Service"},{"location":"payment-fortumo.html#service-credentials","text":"In YouDate admin area ( Admin Settings Payment settings ) you only need to set service ID and secret params: By default, Fortumo will work in test mode. Try to create test payments, and if everything is ok - go live (Fortumo Dashboard).","title":"Service credentials"},{"location":"payment-fortumo.html#additional-info","text":"Links Account creation: https://merchants.fortumo.com/getting-started/creating-an-account/ Web SDK service creation: https://merchants.fortumo.com/integration-and-testing/web/creating-web-sdk-service/","title":"Additional info"},{"location":"payment-robokassa.html","text":"Sign up Create account if you don't have any: https://partner.robokassa.ru/Reg/Register Setup a new shop Navigate to your shops dashboard , click \"Add new\" button: Fill the form, and click Create button: Next form is important (credentials and URLs): Important Shop identifier parameter will be used later as Merchant Login Result URL must end with /balance/buy . For example: https://youdate-demo.hauntd.me/balance/buy Method of sending data to Result URL must be GET Success URL must end with /balance/robokassa-success . For example: https://youdate-demo.hauntd.me/balance/robokassa-success Method of sending data to Success URL must be POST Fail URL must end with /balance/robokassa-failure . For example: https://youdate-demo.hauntd.me/balance/robokassa-failure Method of sending data to Fail URL must be POST Hash calculation method is MD5 or any other available Also, you may want to test payments before going live. Generate passwords for testing payments: Service credentials In YouDate admin area ( Admin Settings Payment settings ) setup Robokossa integration: Notes Merchant login is the same, as Shop Identifier Test payments and Live payments use different password1 and password2 Hashing algorithm must be the same as you have set in Robokassa Shop settings Additional info Links Robokassa Documentation: https://docs.robokassa.ru/en/ \u0420\u043e\u0431\u043e\u043a\u0430\u0441\u0441\u0430 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f: https://docs.robokassa.ru","title":"Robokassa.com"},{"location":"payment-robokassa.html#sign-up","text":"Create account if you don't have any: https://partner.robokassa.ru/Reg/Register","title":"Sign up"},{"location":"payment-robokassa.html#setup-a-new-shop","text":"Navigate to your shops dashboard , click \"Add new\" button: Fill the form, and click Create button: Next form is important (credentials and URLs): Important Shop identifier parameter will be used later as Merchant Login Result URL must end with /balance/buy . For example: https://youdate-demo.hauntd.me/balance/buy Method of sending data to Result URL must be GET Success URL must end with /balance/robokassa-success . For example: https://youdate-demo.hauntd.me/balance/robokassa-success Method of sending data to Success URL must be POST Fail URL must end with /balance/robokassa-failure . For example: https://youdate-demo.hauntd.me/balance/robokassa-failure Method of sending data to Fail URL must be POST Hash calculation method is MD5 or any other available Also, you may want to test payments before going live. Generate passwords for testing payments:","title":"Setup a new shop"},{"location":"payment-robokassa.html#service-credentials","text":"In YouDate admin area ( Admin Settings Payment settings ) setup Robokossa integration: Notes Merchant login is the same, as Shop Identifier Test payments and Live payments use different password1 and password2 Hashing algorithm must be the same as you have set in Robokassa Shop settings","title":"Service credentials"},{"location":"payment-robokassa.html#additional-info","text":"Links Robokassa Documentation: https://docs.robokassa.ru/en/ \u0420\u043e\u0431\u043e\u043a\u0430\u0441\u0441\u0430 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f: https://docs.robokassa.ru","title":"Additional info"},{"location":"requirements.html","text":"Requirements To install YouDate script, you need: Web-server: Apache 2.0 or higher PHP 7.1 - 7.4 MySQL 5.7 or higher PDO PHP extension (enabled by default) Mbstring PHP Extension Intl PHP Extension ICU PHP Extension v49.1+ GD or Imagick PHP Extension EXIF extension SSL certificate for HTTPS Tip Usually, most of these requirements are already installed on most modern hosting providers or they are very easy to install on cloud servers . Not sure if these extensions are installed? Just run the installer and it will check automatically Tip YouDate will work without SSL certificate, but it's highly recommended to use one (besides, OAuth authorization via Facebook/Twitter/etc requires SSL encryption). .htaccess example for https : config Free LetsEncrypt certificate is a good starting point for your web-server.","title":"1. Requirements"},{"location":"requirements.html#requirements","text":"To install YouDate script, you need: Web-server: Apache 2.0 or higher PHP 7.1 - 7.4 MySQL 5.7 or higher PDO PHP extension (enabled by default) Mbstring PHP Extension Intl PHP Extension ICU PHP Extension v49.1+ GD or Imagick PHP Extension EXIF extension SSL certificate for HTTPS Tip Usually, most of these requirements are already installed on most modern hosting providers or they are very easy to install on cloud servers . Not sure if these extensions are installed? Just run the installer and it will check automatically Tip YouDate will work without SSL certificate, but it's highly recommended to use one (besides, OAuth authorization via Facebook/Twitter/etc requires SSL encryption). .htaccess example for https : config Free LetsEncrypt certificate is a good starting point for your web-server.","title":"Requirements"},{"location":"services.html","text":"Additional servicces IPStack.com Note Experimental, since v1.9. https://ipstack.com/ Service is used for country/city detection by IP address (landing page - sign-up form). Free 10,000 queries per month. YouDate uses caching to minimize queries count. To enable this service: Get free API key: https://ipstack.com/product Add API key to your .env config: IPSTACK_API_KEY = yourKeyHere","title":"6. Additional services"},{"location":"services.html#additional-servicces","text":"","title":"Additional servicces"},{"location":"services.html#ipstackcom","text":"Note Experimental, since v1.9. https://ipstack.com/ Service is used for country/city detection by IP address (landing page - sign-up form). Free 10,000 queries per month. YouDate uses caching to minimize queries count. To enable this service: Get free API key: https://ipstack.com/product Add API key to your .env config: IPSTACK_API_KEY = yourKeyHere","title":"IPStack.com"},{"location":"troubleshooting-faq.html","text":"Error An internal server error occurred. The above error occurred while the Web server was processing your request. By default script does not show error details (they are hidden from users). You can view error details in two ways: Turn on debug in .env file: set APP_DEBUG = 1 . Find the log file application/runtime/logs/app.log . Your error will be at the end of the file. Also you can create a ticket and attach that file. Main page is working, 404 error (not found) on any others. Apache Rewrite module is not enabled or .htaccess file is missing. Script is working but I can not see any photos. It looks like that content directories are not writable. Make sure that these directories are writable: application/runtime - application logs, cache etc content/assets - css/js and other generated assets content/photos - photos content/cache - cached photos (thumbnails) content/images - images content/pages - pages Web-camera isn't working in Safari. Safari requires https enabled when accessing web-camera. Application error/not working after upgrade. YouDate couldn't apply updates automatically. You can do this manually by running these commands: cd /path/to/youdate/application php yii migrate/up --interactive = 0 php yii cache/flush-all","title":"F.A.Q."},{"location":"troubleshooting-support.html","text":"Support center: https://youdate.website/support Sign in using your Envato account YouDate will check your purchase code. Otherwise, you'll need to enter your purchase code manually Create a ticket Found a bug? Attach your log file to the ticket ( application/runtime/logs/app.log ) or copy error message from Admin Logs . Note: before sending a bug report, make sure that all script requirements are met","title":"Support"},{"location":"upgrade.html","text":"Upgrade YouDate upgrade process is simple: Replace the application folder with the new application folder (don't forget: application/runtime must be writable). Replace the content/themes/youdate directory with the new content/themes/youdate directory. All new YouDate releases come with an updated translations file ( Source/translations-1.9.json . You may want to import it, but keep in mind that it will overwrite any changes that you've made to existing translations (supported languages only). Then open your website or visit administration area. Application will install database structure updates (if any) and notify you in administration area. Upgrade to 1.9 Follow the upgrade procedure described above. Then you need to import additional SQL dump files (phpMyAdmin, HeidiSQL, Sequel Pro or any other, that support SQL import). Files to import: Source/countries.sql Source/geodata.sql Add this line to your .env config file: APP_GEODATA_SOURCE = mysql Upgrade to 1.2+ You need to add an additional cron command to run queued jobs. See Cron commands for more information.","title":"Upgrade"},{"location":"upgrade.html#upgrade","text":"YouDate upgrade process is simple: Replace the application folder with the new application folder (don't forget: application/runtime must be writable). Replace the content/themes/youdate directory with the new content/themes/youdate directory. All new YouDate releases come with an updated translations file ( Source/translations-1.9.json . You may want to import it, but keep in mind that it will overwrite any changes that you've made to existing translations (supported languages only). Then open your website or visit administration area. Application will install database structure updates (if any) and notify you in administration area.","title":"Upgrade"},{"location":"upgrade.html#upgrade-to-19","text":"Follow the upgrade procedure described above. Then you need to import additional SQL dump files (phpMyAdmin, HeidiSQL, Sequel Pro or any other, that support SQL import). Files to import: Source/countries.sql Source/geodata.sql Add this line to your .env config file: APP_GEODATA_SOURCE = mysql","title":"Upgrade to 1.9"},{"location":"upgrade.html#upgrade-to-12","text":"You need to add an additional cron command to run queued jobs. See Cron commands for more information.","title":"Upgrade to 1.2+"}]}